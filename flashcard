#!/bin/bash 
# all the (basic) good stuff of ANKI in few lines of bash
# Happy learning!
#
SELF_DIR="$( dirname "$(readlink -f "$0")" )"; 
flashcards_csv=""
blacklist=""

init(){
  cards=""
  cat "$@" | sed 's/"//g' > /tmp/.flashcards
  echo "compiling cards.."
  i=1; while read line; do 
    [[ ${#cards} > 0 ]] && cards="$cards\n$i,$line" || cards="$i,$line"
    i=$((i+1))
  done < /tmp/.flashcards
  echo -e "$cards" > /tmp/.flashcards
}

prompt(){
  index=$1; echo "" 
  read -p "p) too easy              " answer
  [[ "$answer" == "p" ]] && {
    [[ ${#blacklist} > 0 ]] && blacklist="$blacklist $index" || blacklist="$index"
    [[ -n $DEBUG ]] && {
      echo "blacklist=$blacklist";
      read -p p p 
    }
  }
}
    
rand(){
  i=$(</dev/urandom tr -dc 1-6 | head -c1)
  echo $((i%$1))
}

# Usage: in_array "$needle" "${haystack[@]}"
inarray(){
    [ -z "$1" ] && return 1
    if [ -n "$BASH" ]; then
        _inarray_var_needle="$1"
        shift
        for element
        do [ X"$element" != X"$_inarray_var_needle" ] || return 0; done
    fi
    return 1
}

run(){
  line="$( cat /tmp/.flashcards | sort -R | head -n1 )"
  i="$( echo "$line" | cut -d, -f1 )"; ignore=0
  for ignoreindex in $blacklist; do [[ $ignoreindex == $i ]] && ignore=1 ; done
  [[ $ignore == 0 ]] && {
    question=$(( $(rand 2) + 1 ))
    [[ $question == 1 ]] && answer=2 || answer=1
    clear
    [[ -n $DEBUG ]] && echo index=$i
    echo -e "$line\n" | cut -d, -f$((question+1))
    read -p "" foo 
    echo -e "$line\n" | cut -d, -f$((answer+1))
    prompt $i;
  }
  run # recurse..learn forever :)
}

init "$@" && run
